{"ast":null,"code":"var _jsxFileName = \"/Users/dimashkabura/Desktop/kardia-info/src/Overview.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Overview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://backend.kardiachain.io/api/v1/contracts?page=1&limit=50&type=KRC20&status=Verified\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this);\n    } else {\n      var tokens = {\n        names: [],\n        logos: []\n      };\n\n      for (let i = 0; i < items.data.data.length; i++) {\n        tokens.names[i] = items.data.data[i].name;\n        tokens.logos[i] = items.data.data[i].logo;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tokens.logos.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/kardia-info/src/Overview.js"],"names":["React","Overview","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","tokens","names","logos","i","data","length","name","logo","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4FAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARL,EASKR,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdL;AAgBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,UAAIW,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAC,EADG;AAETC,QAAAA,KAAK,EAAC;AAFG,OAAb;;AAKA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACb,KAAK,CAACc,IAAN,CAAWA,IAAX,CAAgBC,MAAlC,EAA0CF,CAAC,EAA3C,EAA8C;AAC1CH,QAAAA,MAAM,CAACC,KAAP,CAAaE,CAAb,IAAkBb,KAAK,CAACc,IAAN,CAAWA,IAAX,CAAgBD,CAAhB,EAAmBG,IAArC;AACAN,QAAAA,MAAM,CAACE,KAAP,CAAaC,CAAb,IAAkBb,KAAK,CAACc,IAAN,CAAWA,IAAX,CAAgBD,CAAhB,EAAmBI,IAArC;AACH;;AACD,0BACI;AAAA,kBACKP,MAAM,CAACE,KAAP,CAAaM,GAAb,CAAiB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC5B,8BACI;AAAA,mCACI;AAAA,qCAAgB;AAAK,gBAAA,GAAG,EAAED;AAAV;AAAA;AAAA;AAAA;AAAA;AAAhB,eAASC,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAYD;AACF;;AA1DiD","sourcesContent":["import React from 'react'\n\nexport default class Overview extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"https://backend.kardiachain.io/api/v1/contracts?page=1&limit=50&type=KRC20&status=Verified\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result\n            });\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        var tokens = {\n            names:[],\n            logos:[]\n        };\n\n        for (let i = 0; i<items.data.data.length; i++){\n            tokens.names[i] = items.data.data[i].name\n            tokens.logos[i] = items.data.data[i].logo\n        }\n        return (\n            <ul>\n                {tokens.logos.map((item,index)=>{\n                    return(\n                        <div>\n                            <li key={index}><img src={item}></img></li>\n                        </div>\n                    ) \n                })}\n\n            </ul>\n        )\n      }\n    }\n  }\n\n"]},"metadata":{},"sourceType":"module"}