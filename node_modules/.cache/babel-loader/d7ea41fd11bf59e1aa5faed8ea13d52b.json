{"ast":null,"code":"var _jsxFileName = \"/Users/dimashkabura/Desktop/kardia-info/src/components/subcomponents/Bigchart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Smallchart(props) {\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: range(props.now, props.time, props.histData.length - 1),\n      datasets: [{\n        backgroundColor: props.col,\n        borderColor: props.col,\n        data: props.histData,\n        fill: false,\n        lineTension: 0,\n        pointRadius: 0,\n        borderWidth: 3\n      }]\n    },\n    options: {\n      scales: {\n        x: {\n          grid: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {},\n          type: \"time\"\n        },\n        y: {\n          grid: {},\n          ticks: {}\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Smallchart;\n\nfunction range(now, time, length) {\n  var arr = [now * 1000];\n  var timearr = [];\n\n  for (let i = 0; i < length; i++) {\n    arr.unshift(arr[0] - time * 1000);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    timearr.push(new Date(arr[i]));\n  }\n\n  return timearr;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Smallchart\");","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/kardia-info/src/components/subcomponents/Bigchart.js"],"names":["React","Line","Smallchart","props","labels","range","now","time","histData","length","datasets","backgroundColor","col","borderColor","data","fill","lineTension","pointRadius","borderWidth","scales","x","grid","display","drawBorder","ticks","type","y","plugins","legend","arr","timearr","i","unshift","push","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,sBACI,QAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEC,KAAK,CAACF,KAAK,CAACG,GAAP,EAAYH,KAAK,CAACI,IAAlB,EAAwBJ,KAAK,CAACK,QAAN,CAAeC,MAAf,GAAsB,CAA9C,CADX;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,eAAe,EAAER,KAAK,CAACS,GADhB;AAEPC,QAAAA,WAAW,EAAEV,KAAK,CAACS,GAFZ;AAGPE,QAAAA,IAAI,EAAEX,KAAK,CAACK,QAHL;AAIPO,QAAAA,IAAI,EAAE,KAJC;AAKPC,QAAAA,WAAW,EAAE,CALN;AAMPC,QAAAA,WAAW,EAAE,CANN;AAOPC,QAAAA,WAAW,EAAC;AAPL,OAAD;AAFR,KADV;AAcI,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAE;AACCC,UAAAA,IAAI,EAAE;AACFC,YAAAA,OAAO,EAAE,KADP;AAEFC,YAAAA,UAAU,EAAE;AAFV,WADP;AAKCC,UAAAA,KAAK,EAAC,EALP;AAQCC,UAAAA,IAAI,EAAC;AARN,SADC;AAWJC,QAAAA,CAAC,EACD;AACIL,UAAAA,IAAI,EAAE,EADV;AAIIG,UAAAA,KAAK,EAAC;AAJV;AAZI,OADH;AAsBLG,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AACJN,UAAAA,OAAO,EAAE;AADL;AADH;AAtBJ;AAdb;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;KAhDuBpB,U;;AAkDxB,SAASG,KAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0BE,MAA1B,EAAkC;AAC9B,MAAIoB,GAAG,GAAC,CAACvB,GAAG,GAAC,IAAL,CAAR;AACA,MAAIwB,OAAO,GAAC,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACtB,MAAf,EAAuBsB,CAAC,EAAxB,EAA2B;AACvBF,IAAAA,GAAG,CAACG,OAAJ,CAAYH,GAAG,CAAC,CAAD,CAAH,GAAQtB,IAAI,GAAC,IAAzB;AACH;;AACD,OAAI,IAAIwB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAG,CAACpB,MAAlB,EAAyBsB,CAAC,EAA1B,EAA6B;AACzBD,IAAAA,OAAO,CAACG,IAAR,CAAa,IAAIC,IAAJ,CAASL,GAAG,CAACE,CAAD,CAAZ,CAAb;AACH;;AACD,SAAOD,OAAP;AACH","sourcesContent":["import React from 'react'\n\nimport { Line } from 'react-chartjs-2';\n\nexport default function Smallchart(props) {\n\n    return (\n        <Line\n            data={{\n                labels: range(props.now, props.time ,props.histData.length-1),\n                datasets: [{\n                    backgroundColor: props.col,\n                    borderColor: props.col,\n                    data: props.histData,\n                    fill: false,\n                    lineTension: 0,\n                    pointRadius: 0,\n                    borderWidth:3\n                }\n                ],\n            }}\n            options={{\n                scales: {\n                    x: {\n                        grid: {\n                            display: false,\n                            drawBorder: false\n                        },\n                        ticks:{\n\n                        },\n                        type:\"time\"\n                    },\n                    y:\n                    {\n                        grid: {\n                            \n                        },\n                        ticks:{\n\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                }\n            }}\n\n        />\n    )\n}\n\nfunction range(now, time, length) {\n    var arr=[now*1000]\n    var timearr=[]\n    for(let i=0; i<length; i++){\n        arr.unshift(arr[0]-(time*1000))\n    }\n    for(let i=0;i<arr.length;i++){\n        timearr.push(new Date(arr[i]))\n    }\n    return(timearr)\n}\n"]},"metadata":{},"sourceType":"module"}