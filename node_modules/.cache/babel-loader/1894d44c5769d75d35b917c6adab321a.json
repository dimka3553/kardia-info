{"ast":null,"code":"import React from'react';import{Line}from'react-chartjs-2';import'chartjs-adapter-date-fns';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Bigchart(props){return/*#__PURE__*/_jsx(Line,{data:{labels:range(props.now,props.time,props.histData.length-1),datasets:[{backgroundColor:props.col,borderColor:props.col,data:props.histData,fill:props.col,lineTension:0,pointRadius:0,borderWidth:3,pointHoverRadius:5}]},options:{scales:{x:{grid:{display:false,drawBorder:false},ticks:{maxTicksLimit:6,autoSkip:true,maxRotation:0,minRotation:0},type:\"time\"},y:{grid:{drawBorder:false,precision:1,color:\"#f0f0f0\"},ticks:{callback:function callback(value,index,values){return\"$\"+value.toPrecision(3);},maxTicksLimit:6,padding:10}}},plugins:{legend:{display:false},tooltip:{mode:'index',intersect:false}},hover:{intersect:false,mode:'index'}}});}function range(now,time,length){var arr=[now*1000];var timearr=[];for(var i=0;i<length;i++){var n=arr[0]-time*1000;arr.unshift(round(n,time*1000));}for(var _i=0;_i<arr.length;_i++){timearr.push(new Date(arr[_i]));}return timearr;}function round(num,time){return Math.ceil(num/time)*time;}","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/code/kardia-info/src/components/subcomponents/Bigchart.js"],"names":["React","Line","Bigchart","props","labels","range","now","time","histData","length","datasets","backgroundColor","col","borderColor","data","fill","lineTension","pointRadius","borderWidth","pointHoverRadius","scales","x","grid","display","drawBorder","ticks","maxTicksLimit","autoSkip","maxRotation","minRotation","type","y","precision","color","callback","value","index","values","toPrecision","padding","plugins","legend","tooltip","mode","intersect","hover","arr","timearr","i","n","unshift","round","push","Date","num","Math","ceil"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\nexport default function Bigchart(props) {\n    return (\n        <Line\n            data={{\n                labels: range(props.now, props.time, props.histData.length - 1),\n                datasets: [{\n                    backgroundColor: props.col,\n                    borderColor: props.col,\n                    data: props.histData,\n                    fill: props.col,\n                    lineTension: 0,\n                    pointRadius: 0,\n                    borderWidth: 3,\n                    pointHoverRadius: 5\n                }],\n            }}\n            options={{\n                scales: {\n                    x: {\n                        grid: {\n                            display: false,\n                            drawBorder: false,\n                        },\n                        ticks: {\n                            maxTicksLimit: 6,\n                            autoSkip: true,\n                            maxRotation: 0,\n                            minRotation: 0,\n                        },\n                        type: \"time\"\n                    },\n                    y:\n                    {\n                        grid: {\n                            drawBorder: false,\n                            precision: 1,\n                            color: \"#f0f0f0\"\n                        },\n                        ticks: {\n                            callback: function (value, index, values) {\n                                return (\"$\" + value.toPrecision(3))\n                            },\n                            maxTicksLimit: 6,\n                            padding: 10\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    },\n                    tooltip: {\n                        mode: 'index',\n                        intersect: false,\n                    }\n                },\n                hover: {\n                    intersect: false,\n                    mode:'index',\n                }\n            }}\n\n        />\n    )\n}\n\nfunction range(now, time, length) {\n    var arr = [now * 1000]\n    var timearr = []\n    for (let i = 0; i < length; i++) {\n        var n = arr[0] - (time * 1000)\n        arr.unshift(round(n, (time * 1000)))\n    }\n    for (let i = 0; i < arr.length; i++) {\n\n        timearr.push(new Date(arr[i]))\n    }\n    return (timearr)\n}\n\nfunction round(num, time) {\n    return Math.ceil(num / time) * time;\n}"]},"metadata":{},"sourceType":"module"}