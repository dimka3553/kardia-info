{"ast":null,"code":"var _jsxFileName = \"/Users/dimashkabura/Desktop/kardia-info/src/components/subcomponents/Bigchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Chart, Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Smallchart(props) {\n  _s();\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    Chart.pluginService.register({\n      afterDraw: function (chart, easing) {\n        if (chart.tooltip._active && chart.tooltip._active.length) {\n          const activePoint = chart.controller.tooltip._active[0];\n          const ctx = chart.ctx;\n          const x = activePoint.tooltipPosition().x;\n          const topY = chart.scales['y-axis-1'].top;\n          const bottomY = chart.scales['y-axis-1'].bottom;\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, topY);\n          ctx.lineTo(x, bottomY);\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = '#e23fa9';\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: range(props.now, props.time, props.histData.length - 1),\n      datasets: [{\n        backgroundColor: props.col,\n        borderColor: props.col,\n        data: props.histData,\n        fill: props.col,\n        lineTension: 0,\n        pointRadius: 0,\n        borderWidth: 3\n      }]\n    },\n    options: {\n      scales: {\n        x: {\n          grid: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            autoSkip: true,\n            maxRotation: 0,\n            minRotation: 0\n          },\n          type: \"time\"\n        },\n        y: {\n          grid: {\n            drawBorder: false,\n            precision: 1\n          },\n          ticks: {\n            callback: function (value, index, values) {\n              return \"$\" + value.toPrecision(3);\n            },\n            maxTicksLimit: 6\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Smallchart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Smallchart;\n\nfunction range(now, time, length) {\n  var arr = [now * 1000];\n  var timearr = [];\n\n  for (let i = 0; i < length; i++) {\n    var n = arr[0] - time * 1000;\n    arr.unshift(round(n, time * 1000));\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    timearr.push(new Date(arr[i]));\n  }\n\n  return timearr;\n}\n\nfunction round(num, time) {\n  return Math.ceil(num / time) * time;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Smallchart\");","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/kardia-info/src/components/subcomponents/Bigchart.js"],"names":["React","useEffect","Chart","Line","Smallchart","props","pluginService","register","afterDraw","chart","easing","tooltip","_active","length","activePoint","controller","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","labels","range","now","time","histData","datasets","backgroundColor","col","borderColor","data","fill","lineTension","pointRadius","borderWidth","grid","display","drawBorder","ticks","maxTicksLimit","autoSkip","maxRotation","minRotation","type","y","precision","callback","value","index","values","toPrecision","plugins","legend","mode","intersect","arr","timearr","i","n","unshift","round","push","Date","num","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Chart, Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\n\n\nexport default function Smallchart(props) {\n    useEffect(() => {\n        // Update the document title using the browser API\n        Chart.pluginService.register({\n            afterDraw: function (chart, easing) {\n                if (chart.tooltip._active && chart.tooltip._active.length) {\n                    const activePoint = chart.controller.tooltip._active[0];\n                    const ctx = chart.ctx;\n                    const x = activePoint.tooltipPosition().x;\n                    const topY = chart.scales['y-axis-1'].top;\n                    const bottomY = chart.scales['y-axis-1'].bottom;\n                    ctx.save();\n                    ctx.beginPath();\n                    ctx.moveTo(x, topY);\n                    ctx.lineTo(x, bottomY);\n                    ctx.lineWidth = 2;\n                    ctx.strokeStyle = '#e23fa9';\n                    ctx.stroke();\n                    ctx.restore();\n                }\n            }\n        });\n      });\n    \n    return (\n        <Line\n            data={{\n                labels: range(props.now, props.time, props.histData.length - 1),\n                datasets: [{\n                    backgroundColor: props.col,\n                    borderColor: props.col,\n                    data: props.histData,\n                    fill: props.col,\n                    lineTension: 0,\n                    pointRadius: 0,\n                    borderWidth: 3\n                }\n                ],\n            }}\n            options={{\n                scales: {\n                    x: {\n                        grid: {\n                            display: false,\n                            drawBorder: false\n                        },\n                        ticks: {\n                            maxTicksLimit: 6,\n                            autoSkip: true,\n                            maxRotation: 0,\n                            minRotation: 0,\n                        },\n                        type: \"time\"\n                    },\n                    y:\n                    {\n                        grid: {\n                            drawBorder: false,\n                            precision: 1\n                        },\n                        ticks: {\n                            callback: function (value, index, values) {\n                                return (\"$\" + value.toPrecision(3))\n                            },\n                            maxTicksLimit: 6,\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    },\n                    tooltip: {\n                        mode: 'index',\n                        intersect: false\n                    }\n                }\n            }}\n\n        />\n    )\n}\n\nfunction range(now, time, length) {\n    var arr = [now * 1000]\n    var timearr = []\n    for (let i = 0; i < length; i++) {\n        var n = arr[0] - (time * 1000)\n        arr.unshift(round(n, (time * 1000)))\n    }\n    for (let i = 0; i < arr.length; i++) {\n\n        timearr.push(new Date(arr[i]))\n    }\n    return (timearr)\n}\n\nfunction round(num, time) {\n    return Math.ceil(num / time) * time;\n}"]},"metadata":{},"sourceType":"module"}