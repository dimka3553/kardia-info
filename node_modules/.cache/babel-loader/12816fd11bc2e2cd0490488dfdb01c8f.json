{"ast":null,"code":"var _jsxFileName = \"/Users/dimashkabura/Desktop/kardia-info/src/Tokens.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Tokens extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data1: [],\n      data2: []\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch('https://backend.kardiachain.io/api/v1/contracts?page=1&limit=100&type=KRC20&status=Verified').then(res => res.json()), fetch('https://api.info.kaidex.io/api/tokens').then(res => res.json())]).then(([urlOneData, urlTwoData]) => {\n      this.setState({\n        isLoaded: true,\n        data1: urlOneData,\n        data2: urlTwoData\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data1,\n      data2\n    } = this.state;\n    var contracts1 = [];\n    var logos = [];\n    var names = [];\n    var prices = [];\n    var supplies = [];\n    var mcaps = [];\n\n    for (let i = 0; i < data1.data.data.length; i++) {\n      contracts[i] = data1.data.data[i].contact;\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: console.log(data2.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/kardia-info/src/Tokens.js"],"names":["React","Tokens","Component","constructor","props","state","error","isLoaded","data1","data2","componentDidMount","Promise","all","fetch","then","res","json","urlOneData","urlTwoData","setState","render","contracts1","logos","names","prices","supplies","mcaps","i","data","length","contracts","contact","message","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACRC,KAAK,CAAC,6FAAD,CAAL,CAAqGC,IAArG,CAA0GC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjH,CADQ,EAERH,KAAK,CAAC,uCAAD,CAAL,CAA+CC,IAA/C,CAAoDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3D,CAFQ,CAAZ,EAGGF,IAHH,CAGQ,CAAC,CAACG,UAAD,EAAaC,UAAb,CAAD,KAA8B;AAClC,WAAKC,QAAL,CAAc;AACVZ,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAES,UAFG;AAGVR,QAAAA,KAAK,EAAES;AAHG,OAAd;AAKH,KATD,EAUCZ,KAAD,IAAW;AACP,WAAKa,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAfH;AAiBH;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKJ,KAA/C;AACA,QAAIgB,UAAU,GAAG,EAAjB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACnB,KAAK,CAACoB,IAAN,CAAWA,IAAX,CAAgBC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AACzCG,MAAAA,SAAS,CAACH,CAAD,CAAT,GAAanB,KAAK,CAACoB,IAAN,CAAWA,IAAX,CAAgBD,CAAhB,EAAmBI,OAAhC;AACD;;AACD,QAAIzB,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAAC0B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACzB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACI;AAAA,kBACK0B,OAAO,CAACC,GAAR,CAAYzB,KAAK,CAACmB,IAAlB;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKD;AACF;;AArD+C","sourcesContent":["import React from 'react'\n\nexport default class Tokens extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        data1: [],\n        data2: []\n      };\n    }\n  \n    componentDidMount() {\n        Promise.all([\n            fetch('https://backend.kardiachain.io/api/v1/contracts?page=1&limit=100&type=KRC20&status=Verified').then(res => res.json()),\n            fetch('https://api.info.kaidex.io/api/tokens').then(res => res.json())\n        ]).then(([urlOneData, urlTwoData]) => {\n            this.setState({\n                isLoaded: true,\n                data1: urlOneData,\n                data2: urlTwoData\n            });\n        },\n        (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )  \n    }\n  \n    render() {\n      const { error, isLoaded, data1, data2 } = this.state;\n      var contracts1 = []\n      var logos = [];\n      var names = [];\n      var prices = [];\n      var supplies = [];\n      var mcaps = [];\n      for(let i=0; i<data1.data.data.length; i++){\n        contracts[i]=data1.data.data[i].contact\n      }\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {     \n        return (\n            <div>\n                {console.log(data2.data)}\n            </div>\n        )\n      }\n    }\n  }\n\n"]},"metadata":{},"sourceType":"module"}