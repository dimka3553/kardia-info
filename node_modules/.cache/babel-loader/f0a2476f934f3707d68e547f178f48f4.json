{"ast":null,"code":"var _jsxFileName = \"/Users/dimashkabura/Desktop/code/kardia-info/src/Game.js\";\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./components/getWeb3\";\nimport Blockies from 'react-blockies';\nimport Loader from \"./components/Loader\";\nimport tokenABI from \"./ABI/token.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      InfoBal: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        const minABI = tokenABI;\n        console.log(tokenABI);\n        const tokenAddress = \"0xc20574d56c2232e416C8c4c09A41F7F4141E35eC\";\n        const contract = new web3.eth.Contract(minABI, tokenAddress);\n        var InfoBal = await getBalance();\n\n        async function getBalance() {\n          const result = await contract.methods.balanceOf(accounts[0]).call();\n          const format = web3.utils.fromWei(result);\n          return format;\n        }\n\n        this.setState({\n          web3,\n          accounts,\n          InfoBal\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.runExample = async () => {\n      const {\n        accounts,\n        contract\n      } = this.state; // Stores a given value, 5 by default.\n      // Get the value from the contract to prove it worked.\n      // Update state with the result.\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this);\n    }\n\n    var wal = this.state.accounts[0].substring(0, 5) + \"...\" + this.state.accounts[0].slice(this.state.accounts[0].length - 3);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waltab\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"walsec\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"l\",\n              children: [/*#__PURE__*/_jsxDEV(Blockies, {\n                seed: this.state.accounts[0],\n                size: 10,\n                scale: 4,\n                className: \"identicon m-r-15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), wal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"r p-l-25 p-t-14 p-b-14\",\n              children: this.state.InfoBal + \"INFO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/dimashkabura/Desktop/code/kardia-info/src/Game.js"],"names":["React","Component","getWeb3","Blockies","Loader","tokenABI","Game","state","storageValue","web3","accounts","InfoBal","componentDidMount","eth","getAccounts","minABI","console","log","tokenAddress","contract","Contract","getBalance","result","methods","balanceOf","call","format","utils","fromWei","setState","runExample","error","alert","render","wal","substring","slice","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAGA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACjB;AACJC,MAAAA,YAAY,EAAE,CADV;AAEJC,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADiB;;AAAA,SAQzBC,iBARyB,GAQL,YAAY;AAC5B,UAAI;AACA;AACA,cAAMH,IAAI,GAAG,MAAMP,OAAO,EAA1B,CAFA,CAIA;;AACA,cAAMQ,QAAQ,GAAG,MAAMD,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AAEA,cAAMC,MAAM,GAAGV,QAAf;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA,cAAMa,YAAY,GAAG,4CAArB;AAEA,cAAMC,QAAQ,GAAG,IAAIV,IAAI,CAACI,GAAL,CAASO,QAAb,CAAsBL,MAAtB,EAA8BG,YAA9B,CAAjB;AAEA,YAAIP,OAAO,GAAG,MAAMU,UAAU,EAA9B;;AAEA,uBAAeA,UAAf,GAA4B;AACxB,gBAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,SAAjB,CAA2Bd,QAAQ,CAAC,CAAD,CAAnC,EAAwCe,IAAxC,EAArB;AAEA,gBAAMC,MAAM,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,OAAX,CAAmBN,MAAnB,CAAf;AAEA,iBAAQI,MAAR;AACH;;AAGD,aAAKG,QAAL,CAAc;AAAEpB,UAAAA,IAAF;AAAQC,UAAAA,QAAR;AAAkBC,UAAAA;AAAlB,SAAd,EAA2C,KAAKmB,UAAhD;AACH,OAzBD,CAyBE,OAAOC,KAAP,EAAc;AACZ;AACAC,QAAAA,KAAK,CACA,wEADA,CAAL;AAGAhB,QAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;AACH;AACJ,KAzCwB;;AAAA,SA2CzBD,UA3CyB,GA2CZ,YAAY;AACrB,YAAM;AAAEpB,QAAAA,QAAF;AAAYS,QAAAA;AAAZ,UAAyB,KAAKZ,KAApC,CADqB,CAGrB;AAEA;AAEA;AACH,KAnDwB;AAAA;;AAoDzB0B,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAK1B,KAAL,CAAWE,IAAhB,EAAsB;AAClB,0BAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIyB,GAAG,GAAG,KAAK3B,KAAL,CAAWG,QAAX,CAAoB,CAApB,EAAuByB,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,IAAyC,KAAzC,GAAiD,KAAK5B,KAAL,CAAWG,QAAX,CAAoB,CAApB,EAAuB0B,KAAvB,CAA6B,KAAK7B,KAAL,CAAWG,QAAX,CAAoB,CAApB,EAAuB2B,MAAvB,GAAgC,CAA7D,CAA3D;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,GAAf;AAAA,sCACI,QAAC,QAAD;AACI,gBAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWG,QAAX,CAAoB,CAApB,CADV;AAEI,gBAAA,IAAI,EAAE,EAFV;AAGI,gBAAA,KAAK,EAAE,CAHX;AAII,gBAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOKwB,GAPL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAUI;AAAK,cAAA,SAAS,EAAC,wBAAf;AAAA,wBACK,KAAK3B,KAAL,CAAWI,OAAX,GAAqB;AAD1B;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AA/EwB;;AAkF7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport getWeb3 from \"./components/getWeb3\";\nimport Blockies from 'react-blockies';\nimport Loader from \"./components/Loader\";\nimport tokenABI from \"./ABI/token.json\"\n\n\nclass Game extends Component {\n    state = {\n        storageValue: 0,\n        web3: null,\n        accounts: null,\n        InfoBal: null\n    };\n\n    componentDidMount = async () => {\n        try {\n            // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n\n            // Use web3 to get the user's accounts.\n            const accounts = await web3.eth.getAccounts();\n\n            const minABI = tokenABI;\n            console.log(tokenABI)\n            const tokenAddress = \"0xc20574d56c2232e416C8c4c09A41F7F4141E35eC\";\n\n            const contract = new web3.eth.Contract(minABI, tokenAddress);\n\n            var InfoBal = await getBalance();\n\n            async function getBalance() {\n                const result = await contract.methods.balanceOf(accounts[0]).call();\n\n                const format = web3.utils.fromWei(result);\n\n                return (format)\n            }\n\n\n            this.setState({ web3, accounts, InfoBal }, this.runExample);\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n    runExample = async () => {\n        const { accounts, contract } = this.state;\n\n        // Stores a given value, 5 by default.\n\n        // Get the value from the contract to prove it worked.\n\n        // Update state with the result.\n    };\n    render() {\n        if (!this.state.web3) {\n            return <Loader />;\n        }\n        var wal = this.state.accounts[0].substring(0, 5) + \"...\" + this.state.accounts[0].slice(this.state.accounts[0].length - 3);\n        return (\n            <div className=\"Game\">\n                <div className=\"waltab\">\n                    <div className=\"walsec\">\n                        <div className=\"top\">\n                            <div className=\"l\">\n                                <Blockies\n                                    seed={this.state.accounts[0]}\n                                    size={10}\n                                    scale={4}\n                                    className=\"identicon m-r-15\"\n                                />\n                                {wal}\n                            </div>\n                            <div className=\"r p-l-25 p-t-14 p-b-14\">\n                                {this.state.InfoBal + \"INFO\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}